//https://practice.geeksforgeeks.org/problems/maximum-sum-leaf-to-root-path/1
//Maximum sum Root to leaf.

class Solution {

    public static int maxPathSum(Node root) {
        //code here
        if (root == null) return Integer.MIN_VALUE;

        if (root.left == null && root.right == null) return root.data;

        int maxSum = Math.max(maxPathSum(root.left), maxPathSum(root.right));

        return maxSum + root.data;
    }
}

---------------------------------------------------------
//Travel and solve approach

class Solution
{
    static int max = Integer.MIN_VALUE;
    public static int maxPathSum(Node root)
    {
        max = Integer.MIN_VALUE;
        travel(root, 0);
        return max;
    }
    
    public static void travel(Node node, int sum){
        if(node == null){
            return;
        }
        
        if(node.left == null && node.right == null){
            sum = sum + node.data;
            if(sum > max){
                max = sum;
            }
            return;
        }
        
        travel(node.left, sum + node.data);
        travel(node.right, sum + node.data);
    }
    
    
}